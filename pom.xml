<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sl</groupId>
	<artifactId>spring-web-mybatics</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<!-- 项目属性 -->
	<properties>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<tomcat.version>2.2</tomcat.version>
		<spring.version>5.1.0.RELEASE</spring.version>
		<slf4j.version>1.7.7</slf4j.version>
		<junit.version>4.12</junit.version>

		<!--以下属性与访问数据库有关 -->
		<druid.version>1.1.11</druid.version>
		<mysql.driver.version>5.1.30</mysql.driver.version>
		<mybatis-spring.version>1.3.2</mybatis-spring.version>
		<mybatis.version>3.4.6</mybatis.version>
	</properties>

	<!-- 依赖 -->
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- 自动解析成json传送到页面，spring-mvc.xml需要配置<mvc:annotation-driven> -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.10.0.pr1</version>
		</dependency>

		<!--3.0版本以上提供@WebServlet、@WebFilter、@WebListener等注解 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- 文件上传，生成multipartResolver的bean所在的包 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.2</version>
		</dependency>

		<!-- log4j日志类 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- 单元测试相关 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!--以下属性与访问数据库有关 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis-spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.driver.version}</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<webappDirectory>${project.build.directory}/${project.artifactId}</webappDirectory>
					<warName>${project.artifactId}</warName>
				</configuration>
			</plugin>
			<!-- tomcat7插件 -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>${tomcat.version}</version>
				<configuration>
					<port>8080</port>
					<path>/${project.artifactId}</path>
					<uriEncoding>${project.build.sourceEncoding}</uriEncoding>
				</configuration>
			</plugin>
			
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<sonar.host.url>
					http://localhost:9000
				</sonar.host.url>
				<!--
				<sonar.inclusions> 
					src/main/java/com/sl/service/**,
					src/main/java/com/xx/service/impl/**, 
					src/main/java/com/sl/controller/TestController.java, 
					src/main/java/com/sl/controller/ArticleController.java 
				</sonar.inclusions> 
				<sonar.exclusions> 
					src/main/java/com/xx/service/impl/TestServiceImpl3.java 
				</sonar.exclusions> 
				-->
			</properties>
			<build>
				<plugins>
				
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>3.2</version>
					</plugin>

					<!-- 覆盖率 -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.1</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>target/jacoco.exec</dataFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
					<plugin>
    					<groupId>org.apache.maven.plugins</groupId>
   						<artifactId>maven-surefire-plugin</artifactId>
    					<version>2.19</version>
    					<dependencies>
        					<dependency>
            					<groupId>org.apache.maven.surefire</groupId>
            					<artifactId>surefire-junit47</artifactId>
            					<version>2.19</version>
        					</dependency>
    					</dependencies>
    					<configuration>
        					<!--配置是否跳过测试用例执行-->
        					<skipTests>false</skipTests>
        					<includes>
            					<include>**/ArticleServiceImplTest.java</include>
        					</includes>
        					<excludes>
            					<exclude>**/ArticleControllerTest.java</exclude>
        					</excludes>
    					</configuration>
					</plugin>
					
				</plugins>
			</build>
		</profile>
	</profiles>

</project>